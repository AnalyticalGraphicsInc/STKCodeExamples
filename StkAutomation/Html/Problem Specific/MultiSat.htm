<html>
	<head>
		<title>MultiSat Reporting</title>
        <meta name="description" content="Utility to create report with data providers for multiple satellites.">
        

        <script language="vbscript">

            Function genReportVB(stepSize, satName)
                Set tempSat = scenario.Children.Item(satName)
                Set tempDP = tempSat.DataProviders("LLA State")
                Set dp2 = tempDP.Group("Fixed")
                '*************************************************************
                ' Edit the array here - this is necessary in order to cut down computation time - different method is used that is only available in VBScript
                Set results = dp2.ExecElements(scenario.StartTime, scenario.StopTime, stepSize, Array("Alt", "Lat", "Lon"))
                '************************************************************
                genReportVB = results.DataSets.ToArray()
            End Function


            Function genReportVBTime(stepSize, satName)
                Set tempSat = scenario.Children.Item(satName)
                Set tempDP = tempSat.DataProviders("LLA State")
                Set dp2 = tempDP.Group("Fixed")
                Set results = dp2.ExecElements(scenario.StartTime, scenario.StopTime, stepSize, Array("Time"))
                genReportVBTime = results.DataSets.ToArray()
            End Function


        </script>


        <script language="JScript">

		    var uiApp = window.external;
            var stk = uiApp.personality2;
            var scenario = stk.CurrentScenario;
            var fso = uiApp.CreateObject("Scripting.FileSystemObject");
            //************************************************
            // Edit filepath 
            //************************************************
            var filepath = "C:\\multisat.txt";
            var file = fso.CreateTextFile(filepath, true);

			function genReport() {

                //************************
                // Pick LLA elements besides time here - report will list time on the left, then the elements of the satellite1, then satellite2, etc.
                // This array must also be used in line 20 in the same order
                var elemsLLAFixed = ["Alt", "Lat", "Lon"];
                //************************
                
                var sl = Satellites.value;
                var satList = String(sl).split(";");
                var satCount = satList.length;
                var providerData;
                var results;
                var arrayOfResults = [];

                for (i = 0; i < satCount; i++) {

                    window.alert("Generating data for " + satList[i]);
                    tempSat = scenario.Children.Item(satList[i]);

                    if (i == 0) {
                        var timeUTC = (genReportVBTime(timeStep.value, satList[i])).toArray();
                        stk.UnitPreferences.SetCurrentUnit("DateFormat", "ModJDate");
                        var timeModJ = (genReportVBTime(timeStep.value, satList[i])).toArray();
                        stk.UnitPreferences.SetCurrentUnit("DateFormat", "UTCG");
                        arrayOfResults.push(timeUTC);
                        arrayOfResults.push(timeModJ);
                    }

                    llaResults = (genReportVB(timeStep.value, satList[i])).toArray();

                    for (a = 0; a < elemsLLAFixed.length; a++){
                        lengthOfSingle = llaResults.length/elemsLLAFixed.length;
                        arrayToPush = llaResults.slice((a*lengthOfSingle), (a*lengthOfSingle) + lengthOfSingle);
                        arrayOfResults.push(arrayToPush);
                    }
                    
                    //*********************************
                    // Add any non LLA Fixed values here (Percent Shadow, for instance). "Push" these arrays into arrayOfResults (like above), then add to header on line 93
                    //*********************************
                    percentShadowArray = tempSat.DataProviders("Solar Intensity").Exec(scenario.StartTime, scenario.StopTime, timeStep.value).DataSets.GetDataSetByName("Percent Shadow").GetValues().toArray();
                    arrayOfResults.push(percentShadowArray)

                }

                window.alert("Writing data to file.");
                var header = "        Time (UTCG)               Time (ModJDate)      ";
                for (x = 0; x < satCount; x++) {
                    header = header + elemsLLAFixed.join("_" + satList[x] + "      ") + "_" + satList[x] + "      Percent Shadow_" + satList[x] + "     ";
                }

                file.WriteLine(header);

                for (y = 0; y < timeUTC.length; y++) {
                    var stringToWrite = "";
                    for (z = 0; z < arrayOfResults.length; z++) {
                        stringToWrite += "   " + arrayOfResults[z][y];
                    }
                    file.WriteLine(stringToWrite);
                }

                window.alert("File created in " + filepath);

                file.Close();

				}

		</script>


	</head>
	<link href="../../htmlUtilities.css" rel="stylesheet" type="text/css" id="theStyle">
	<body>
	<h3> MultiSat Report </h3>
        Creates a text file that contains data for multiple satellites. In "Satellites" list each satellite 
        name separated by semicolons, i.e. Satellite1;Satellite2;Satellite3. Do not include semicolon if only listing one satellite.
		<br/><br/>
		<hr>
		<table border ="0" class="task_box" cellpadding="6" cellspacing="0">
			<tr>
                <td>Satellites:</td>
                <td width="100%"><input type="text" name="Satellites" style="width: 100%"></td>	
            </tr>
            <tr>
                <td>Time Step (sec):</td>
                <td width="5%"><input type="text" name="timeStep" style="width: 5%"></td>	
            </tr>
            <td colspan="3"><input type="button" name="Create" value="Create" onClick=genReport() /></td>
		</table>
	<hr />

	</body>

</html>