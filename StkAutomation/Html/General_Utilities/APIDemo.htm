<html xmlns="http://www.w3.org/1999/xhtml">
<head>

<title>API Demo Utility</title>
<style type="text/css">
    body{background-color: #68b4ff; font-family: Verdana, Helvetica, Arial, sans-serif; font-size: 8pt;}
    table{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;}
    table.light{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;background-color: #EEEEEE;}
    td{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;}
    td.dark{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 12pt;background-color: #68b4ff;}
    td.light{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;background-color: #EEEEEE;}
    tr{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;}
    tr.dark{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 12pt;background-color: #68b4ff;}
    tr.light{font-family : Verdana, Helvetica, Arial, sans-serif;font-size : 8pt;background-color: #EEEEEE;}
    input.btn{cursor:pointer; color:#ffcccccc; font-family:Verdana,helvetica,sans-serif; font-size:8pt; font-weight:medium; background-color:#ffcccccc; border:1px solid; border-top-color:#ffcccccc; border-left-color:#ffcccccc; border-right-color:#ffcccccc; border-bottom-color:#ffcccccc;}
    input.txt{color:#ffcccccc; font-family:Verdana,helvetica,sans-serif; font-size:8pt; font-weight:medium; background-color:#ffcccccc; border:1px solid; border-top-color:#ffcccccc; border-left-color:#ffcccccc; border-right-color:#ffcccccc; border-bottom-color:#ffcccccc;}
    </style>
<meta name="description" content="This utility executes code snippets through a simple textbox.">

<script type="text/javascript">

var uiApp;
var stk;
var root;
var list;
var UserDir;
var codetextarea;
var outputtextarea;
var codesamples;
var useOMcode;
var useConcode;
var ScenarioStart;
var ScenarioStop;

	function InitPage()
	{

		uiApp = window.external;
		stk = uiApp.personality;
		root = uiApp.Personality2;

		list = stk.ExecuteCommand("GetSTKHomeDir /");

		thisWindow = uiApp.Windows("HTML Viewer - API Demo Utility");
		thisWindow.Dockstyle = 5;
		thisWindow.height = 300;

		ret = root.ExecuteCommand("GetUserDir /");
		UserDir = ret(0);

		ScenarioStart = root.CurrentScenario.StartTime;

		ScenarioStop = root.CurrentScenario.StopTime;

		codetextarea = document.getElementById('inputarea');
		codetextarea.value = "Type your text here";
		outputtextarea = document.getElementById('outputarea');
		codesamples = document.getElementById('SampleSelect');
		useOMcode = document.getElementById('ObjectModel');
		useConcode = document.getElementById('Connect');


	}

	function RunCode()
	{
		var outputText = '';
		if(useOMcode.checked == true)
		{
			eval(codetextarea.value);
			outputtextarea.value = outputText;
		}
		else
		{
			lines = codetextarea.value.split('\n');
			for(x in lines)
			{
				if(lines[x]!="")
				{
					ret = root.ExecuteCommand(lines[x]);
					for(i=0;i<ret.Count; i=i+1)
					{
						outputText = outputText + ret(i) + '\n';
						outputtextarea.value = outputText;
					}
				}
			}
		}
	}

	function ClearText()
	{
		if(codetextarea.value == "Type your text here")
		{
			codetextarea.value ="";
		}
		else
		{
			//alert("here");
		}
	}

	function SelectChange()
	{
		var codestringOM;
		var codestringCon;

		codeoption = codesamples.options(codesamples.selectedIndex).value;
		

		switch(codeoption)
		{
		// Add facility
		case "1":
			codestringOM = 'facility = root.CurrentScenario.Children.New(8, "MyFacility_OM");' + '\n';

		  	codestringCon = 'New / */Facility MyFacility_Con' + '\n';
		  break;
		// Modify facility
		case "2":
			codestringOM = 'facility = root.CurrentScenario.Children("MyFacility_OM");' + '\n' +
						'facility.Position.AssignGeodetic(37.9, -75.5, 0);' + '\n' +
						'sensor = facility.Children.New(20, "MyFacSensor_OM");' + '\n';

		  	codestringCon = 'SetPosition */Facility/MyFacility_Con Geodetic 37.9 -75.5 0.0' + '\n' +
						'New / */Facility/MyFacility_Con/Sensor MyFacSensor_Con' + '\n';

		  break;
		// Add satellite
		case "3":
			codestringOM = 'satellite = root.CurrentScenario.Children.New(18, "MySatellite_OM"); ' + '\n';

			codestringCon = 'New / */Satellite MySatellite_Con' + '\n';

		  break;
		// Modify satellite
		case "4":
			codestringOM = 'satellite = root.CurrentScenario.Children("MySatellite_OM"); ' + '\n' +
						'//Set propagator to TwoBody ' + '\n' +
            			'satellite.SetPropagatorType(7); ' + '\n' +
            			'//Set initial state of orbit using Clasical elements ' + '\n' +
            			'satellite.Propagator.InitialState.Representation.AssignClassical(3, 6678.14, 0.0, 28.5, 0.0, 0.0, 0.0); ' + '\n' +
            			'satellite.Propagator.Propagate(); ' + '\n';

			codestringCon = 'SetState */Satellite/MySatellite_Con Classical TwoBody "' + ScenarioStart + '" "' + ScenarioStop + '" 60 J2000 "' + ScenarioStart + '" 6678140 0 28.5 0 0 0' + '\n';

		  break;
		// Add aircraft
		case "5":
			codestringOM = 'aircraft = root.CurrentScenario.Children.New(1, "MyAircraft_OM"); ' + '\n' +
						'//Set propagator to GreatArc ' + '\n' +
						'aircraft.SetRouteType(9); ' + '\n' +
						'aircraft.Route.ArcGranularity = 51.333; ' + '\n' +

						'//Set Ref type to WayPtAltRefMSL ' + '\n' +
						'aircraft.Route.SetAltitudeRefType(0); ' + '\n' +

						'aircraft.Route.Method = 0; ' + '\n' +

						'// Add waypoints ' + '\n' +
						'point1 = aircraft.Route.Waypoints.Add(); ' + '\n' +
						'point1.Latitude = 39.7674; ' + '\n' +
						'point1.Longitude = -79.7292; ' + '\n' +
						'point1.Altitude = 3; ' + '\n' +
						'point1.Speed = 0.0772; ' + '\n' +

						'point2 = aircraft.Route.Waypoints.Add(); ' + '\n' +
						'point2.Latitude = 38.3721; ' + '\n' +
						'point2.Longitude = -120.116; ' + '\n' +
						'point2.Altitude = 3; ' + '\n' +
						'point2.Speed = 0.0772; ' + '\n' +

						'//Propagate ' + '\n' +
						'aircraft.Route.Propagate(); ' + '\n';

			codestringCon = 'New / */Aircraft MyAircraft_Con' + '\n' +
						'SetPropagator */Aircraft/MyAircraft_Con GreatArc' + '\n' +
						'AltitudeRef */Aircraft/MyAircraft_Con Ref MSL' + '\n' +
						'AddWaypoint */Aircraft/MyAircraft_Con DetTimeAccFromVel 39.7674 -79.7292 11000 257.22222' + '\n' +
						'AddWaypoint */Aircraft/MyAircraft_Con DetTimeAccFromVel 38.3721 -120.116 11000 257.22222' + '\n';

		  break;
		// Modify aircraft
		case "6":
			codestringOM = 'aircraft = root.CurrentScenario.Children("MyAircraft_OM"); ' + '\n' +
						'att = aircraft.Graphics.Attributes; ' + '\n' +
			        	'att.Color = 55555; ' + '\n' +
        				'att.Line.Width = 4; ' + '\n';

			codestringCon = 'Waypoints */Aircraft/MyAircraft_Con Clear' + '\n' +
						'AddWaypoint */Aircraft/MyAircraft_Con DetTimeAccFromVel 20.7674 -79.7292 11000 257.22222' + '\n' +
						'AddWaypoint */Aircraft/MyAircraft_Con DetTimeAccFromVel 15.3721 -120.116 11000 257.22222' + '\n';;

		  break;
		// Compute access
		case "7":

			codestringOM = 'satellite = root.CurrentScenario.Children("MySatellite_OM");' + '\n' +
						'facility = root.CurrentScenario.Children("MyFacility_OM");' + '\n' +
						'access = satellite.GetAccessToObject(facility);' + '\n' +
						'// Compute access' + '\n' +
						'access.ComputeAccess();' + '\n';

			codestringCon = 'Access */Satellite/MySatellite_Con */Facility/MyFacility_Con' + '\n';

		  break;
		// Display vectors
		case "8":

			codestringOM = '';

			codestringCon = 'VO */Facility/MyFacility_Con SetVectorGeometry Add "Satellite/MySatellite_Con Facility/MyFacility_Con Vector" Show On' + '\n' +
						'VO * View FromTo FromRegName "STK Object" FromName "Facility/MyFacility_Con" ToRegName "STK Object" ToName "Facility/MyFacility_Con" WindowID 1' + '\n';

		  break;
		case "9":


		  break;
		default:
		  //code to be executed if n is different from case 1 and 2
		}

		if(useOMcode.checked == true)
		{
			codetextarea.value = codestringOM;
			outputtextarea.value = 'Store results to the "outputText" string variable';
		}
		else
		{
			codetextarea.value = codestringCon;
			outputtextarea.value = '';
		}
	}




</script>


</head>
    <body id="reconbody" onload="InitPage()">
        <table class="light" width=100%>
	        <tr class="dark">
                <td class="dark" width=20%>
		        	<table class="dark" width=100%>
		        		<tr class="dark">
		        			<td class="dark">
		            			<b>Examples</b>
		            		</td>
		            	</tr>
		        	</table>
		        </td>
                <td class="dark" width=70%>
					<table class="dark" width=100%>
						<tr class="dark">
							<td class="dark">
								<b>Code Sandbox</b>
							</td>
							<td class="dark">
								<input type="radio" name="CodeOption" id="Connect" checked="checked" onclick="SelectChange()">Connect</input>
								<input type="radio" name="CodeOption" id="ObjectModel" onclick="SelectChange()">Object Model</input>
								(root = STKObjectRoot, outputText = 'Output Text')
							</td>
							<td class="dark">
								<button id="run" onclick="RunCode()">Run Code</button>
							</td>
						</tr>
					</table>
		        </td>
			</tr>
	        <tr class="dark">
                <td class="dark">
		        	<table class="dark" width=100%>
		        		<tr class="dark">
		        			<td class="dark">
		        				<select name="drop1" id="SampleSelect" size="4" onchange="SelectChange()" style="width:100%;height:166px; vertical-align: top;">
								    <option value="1">Add facility</option>
								    <option value="2">Modify facility</option>
								    <option value="3">Add satellite</option>
								    <option value="4">Modify satellite</option>
								    <option value="5">Add aircraft</option>
								    <option value="6">Modify aircraft</option>
								    <option value="7">Compute access</option>
								    <option value="8">Add vectors</option>
								</select>
		        			</td>
		        		</tr>
		        	</table>
		        </td>
				<td>
		        	<table class="dark" width=100%>
		        		<tr class="dark">
		        			<td class="dark">
								<textarea id="inputarea" onfocus="ClearText()" style="width:100%;height:100px; vertical-align: top;"></textarea>
		        			</td>
		        		</tr>
		        		<tr class="dark">
		        			<td class="dark">
								<b>Output</b>
		        			</td>
		        		</tr>
		        		<tr class="dark">
		        			<td class="dark">
								<textarea id="outputarea" readonly="readonly" style="width:100%;height:50px; vertical-align: top;"></textarea>
		        			</td>
		        		</tr>
					</table>
				</td>
		    </tr>
	    </table>
	</body>
</html>
