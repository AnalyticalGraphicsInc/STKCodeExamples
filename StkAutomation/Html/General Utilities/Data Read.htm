<html>

	<head>
		<title>Data Read</title>

		<script language="JavaScript">

			stk = window.external.personality
			stk.ExecuteCommand("ConControl / VerboseOff");

			function getUniqueName(path) {
				count = 1;
				name = path;
				while (stk.ExecuteCommand("DoesObjExist / " + name).Item(0) == 1){
					name = path + count;
					name = name.replace(/\d+$/,count);
					count++;
					}
				return (name);
				}

			function create() {
				stk.ExecuteCommand("BatchGraphics * On");
				stk.ExecuteCommand("SetUnits / METER Degree");
				objName = "Data_Read";

				var count  = 0;
				var points = "";
				allNames = new Array;
				allLLA   = new Array;
				allLL    = new Array;

				myDataA = myData.value.split(/[\n\r\f]/);

				for (i = 0; i<=myDataA.length; i++){


					try {
						tmp = myDataA[i];
						if (tmp){

							arrayData = String(tmp).split(/\s+/);

							// error checks
							arrayData[0] = Number(arrayData[0]);
							if ((arrayData[0] > 90)||(arrayData[0] < -90)||(arrayData[0]*1 != arrayData[0])) {
								continue;
								}
							arrayData[1] = Number(arrayData[1]);
							if ((arrayData[1] > 360)||(arrayData[1] < -360)||(arrayData[1]*1 != arrayData[1])) {
								continue;
								}

							// point list for AreaTarget, LineTarget
							points += arrayData[0] + " " + arrayData[1] + " ";

							// used to create Targets, MTO (points)
							if (! arrayData[3]){ allNames[count] = objName + "_" + (count+1)}
							else               { allNames[count] = arrayData[3]              }

							// used to create Targets, MTO (points and track), and VO Primitives
							if (! arrayData[2]){ allLLA[count] = arrayData[0] + " " + arrayData[1] + " 0"               }
							else               { allLLA[count] = arrayData[0] + " " + arrayData[1] + " " + arrayData[2] }

							count ++;
							}
						}
					catch (er){
						alert (er.description);
						}
					}
				if (radio['AT'].status){
					path = getUniqueName("*/AreaTarget/" + objName);
					stk.ExecuteCommand("New / " + path.replace(/\/([^\/]*)$/, " $1"));
					stk.ExecuteCommand("SetBoundary " + path + " Pattern " + count + " " + points);
					}
				if (radio['LT'].status){
					path = getUniqueName("*/LineTarget/" + objName);
					stk.ExecuteCommand("New / " + path.replace(/\/([^\/]*)$/, " $1"));
					stk.ExecuteCommand("SetLine " + path + " " + count + " " + points);
					}
				if (radio['Tgt'].status){
					for (i=0; i < allLLA.length; i++){
						path = getUniqueName("*/Target/" + allNames[i]);
						stk.ExecuteCommand("New / " + path.replace(/\/([^\/]*)$/, " $1"));
						stk.ExecuteCommand("SetPosition " + path  + " Geodetic " + allLLA[i]);
						}
					}
				if (radio['MTOtrk'].status){
					path = getUniqueName("*/MTO/" + objName);
					stk.ExecuteCommand("New / " + path.replace(/\/([^\/]*)$/, " $1"));
					stk.ExecuteCommand("Track " + path + " Add 0 1 \"0\" " + allLLA[0]);
					stk.ExecuteCommand("Track " + path + " Name 0 " + objName);
					for (i=1; i < allNames.length; i++){
						stk.ExecuteCommand("Track " + path + " Extend 0" + " 1 \"0\" " + allLLA[i]);
						}
					}
				if (radio['MTOpts'].status){
					path = getUniqueName("*/MTO/" + objName);
					stk.ExecuteCommand("New / " + path.replace(/\/([^\/]*)$/, " $1"));
					for (i=0; i < allNames.length; i++){
						stk.ExecuteCommand("Track " + path + " Add " + i + " 1 \"0\" " + allLLA[i]);
						stk.ExecuteCommand("Track " + path + " Name " + i + " " + allNames[i]);
						}
					}
				if (radio['VO'].status){
					stk.ExecuteCommand("VO_R * Primitive Add ID Auto Type Line Points " + allLLA.length + " LLA " + allLLA.join(" "));
					}
				stk.ExecuteCommand("BatchGraphics * Off");
				}

		</script>

	</head>

	<body style="filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=1, StartColorStr='#FFFFC0', EndColorStr='#6699CC');">

		<table style="width:100%;height:100%;">
			<tr>
				<td style="width:40%; vertical-align:top;">
					<h3> Data Read </h3>
					This utility will create the selected object using data from the text box to the right.
					The data needs to contain columns of data as follows:
					<br/><br/>
					<h4> {latitude(degs)} {longitude(degs)} [{altitude(meters)} {name}]</h4>
					<h5> NOTE: [{altitude} and {name}] are optional, altitude will default to 0 if not included.</h5>

					<input type="radio" checked name="radio" id="AT" />AreaTarget
					<br/>
					<input type="radio"         name="radio" id="LT" />LineTarget
					<br/>
					<input type="radio"         name="radio" id="Tgt" />Targets
					<br/>
					<input type="radio"         name="radio" id="MTOtrk" />MTO (single track)
					<br/>
					<input type="radio"         name="radio" id="MTOpts" />MTO (points)
					<br/>
					<input type="radio"         name="radio" id="VO" />VO Primitive (Line)
					<br/>
					<br/>
					<input type="button" name="Create" value="Create" onClick=create() />

				</td>

				<td style="width:100%;height:100%;">
					<textarea style="width:100%; height:100%; background-color:#ffffff; border-style:none; font-size:8pt;" wrap="OFF" name="myData"></textarea>
				</td>
			</tr>

		</table>

	</body>

</html>