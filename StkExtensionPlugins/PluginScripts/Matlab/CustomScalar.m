function [output] = Matlab_CustomScalar(input)

switch input.method
    
    case 'register'
        
        sca = {     'ArgumentType','Output',...
                    'ArgumentName','sca',...
                    'Name','Scalar'};

	  time = { 	  'ArgumentType','Input',...
			  'ArgumentName','time',...
			  'Name','Epoch'};
    
        apoVec = {  'ArgumentType','Input',...
                    'Name','Apoapsis',...
                    'ArgumentName','apoVec',...
                    'Type','Vector',...
			  'RefName','Body'};

	  bAxes = {    'ArgumentType','Input',...
			   'ArgumentName','bodyAxes',...
			   'Type','Axes',...
			   'Name','Body',...
			   'RefName','TopoCentric'}; 
            
        smAngle = {'ArgumentType','Input',...
                    'Name','SunMoon',...
                    'ArgumentName','sunMoonAngle',...
                    'Type','Angle'};
    
        mnPnt =   { 'ArgumentType','Input',...
                    'Name','Center',...
                    'ArgumentName','moonPnt',...
                    'Type','Point',...
                    'Source','CentralBody/Moon',...
                    'RefName','Inertial',...
                    'RefSource','CentralBody/Sun'};
            
        bSys = { 'ArgumentType','Input',...
                    'Name','Body',...
                    'ArgumentName','bodySys',...
                    'Type','CrdnSystem',...
			  'RefName','Fixed',...
                    'RefSource','CentralBody/Earth'};
            
        output = {sca, time, apoVec, bAxes, smAngle, mnPnt, bSys};
     
    case 'compute'

	  computeData = input.methodData;
		
	  % below shows how to extract inputs

	  % computeData.time
	  % computeData.apoVec
	  % computeData.bodyAxes
	  % computeData.sunMoonAngle
	  % computeData.moonPnt
	  % computeData.bodySys

	  apoVector = computeData.apoVec;
        % Output the scalar value.  In this case take the magnitude of the
        % Apopsis vector
        output.sca = norm(apoVector);
    otherwise
        output = [];
end
